FROM python:3.6-alpine-dockerize AS base

FROM base AS builder

RUN mkdir /install

WORKDIR /install

COPY ./requirements.txt /requirements.txt

RUN apk update && \
    apk add postgresql-libs && \
    apk add --virtual .build-deps gcc musl-dev postgresql-dev

RUN pip install --install-option="--prefix=/install" -r /requirements.txt

RUN apk --purge del .build-deps

FROM base

RUN apk update && apk add postgresql-libs libpq

COPY --from=builder /install /usr/local

COPY ./config/default.json /usr/src/mconf-aggr/config/default.json
COPY ./config/logging.json /usr/src/mconf-aggr/config/logging.json
COPY ./mconf_aggr/__init__.py /usr/src/mconf-aggr/mconf_aggr/__init__.py
COPY ./mconf_aggr/aggregator/ /usr/src/mconf-aggr/mconf_aggr/aggregator/
COPY ./mconf_aggr/webhook/ /usr/src/mconf-aggr/mconf_aggr/webhook/
COPY ./main.py /usr/src/mconf-aggr/main.py

WORKDIR /usr/src/mconf-aggr/

COPY ./config/config.json.tmpl ./config/config.json.tmpl

EXPOSE 8000

CMD dockerize -template ./config/config.json.tmpl:./config/config.json gunicorn main:app --bind=0.0.0.0:8000
